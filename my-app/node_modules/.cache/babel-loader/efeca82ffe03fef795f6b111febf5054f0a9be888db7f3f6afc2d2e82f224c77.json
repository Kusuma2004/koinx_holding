{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kusum\\\\OneDrive\\\\Documents\\\\Documents\\\\koinx\\\\my-app\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Grid, Card, CardContent, Typography, Checkbox, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Avatar, Paper, Alert } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst holdingsData = [{\n  coin: 'btc',\n  coinName: 'Bitcoin',\n  logo: 'https://cryptologos.cc/logos/bitcoin-btc-logo.png',\n  totalHoldings: 2.5,\n  averageBuyPrice: 30000,\n  currentPrice: 35000,\n  stcg: {\n    gain: 10000,\n    balance: 1.5\n  },\n  ltcg: {\n    gain: -5000,\n    balance: 1\n  }\n}, {\n  coin: 'eth',\n  coinName: 'Ethereum',\n  logo: 'https://cryptologos.cc/logos/ethereum-eth-logo.png',\n  totalHoldings: 5,\n  averageBuyPrice: 1500,\n  currentPrice: 1200,\n  stcg: {\n    gain: -3000,\n    balance: 2\n  },\n  ltcg: {\n    gain: 2000,\n    balance: 3\n  }\n}];\nconst calculateNetGains = gains => {\n  const stcgNet = gains.stcg.profits - gains.stcg.losses;\n  const ltcgNet = gains.ltcg.profits - gains.ltcg.losses;\n  const realised = stcgNet + ltcgNet;\n  return {\n    stcgNet,\n    ltcgNet,\n    realised\n  };\n};\nconst Dashboard = () => {\n  _s();\n  const [selected, setSelected] = useState([]);\n  const [preHarvest, setPreHarvest] = useState({});\n  const [postHarvest, setPostHarvest] = useState({});\n  useEffect(() => {\n    const stcgProfits = holdingsData.reduce((sum, h) => sum + (h.stcg.gain > 0 ? h.stcg.gain : 0), 0);\n    const stcgLosses = holdingsData.reduce((sum, h) => sum + (h.stcg.gain < 0 ? -h.stcg.gain : 0), 0);\n    const ltcgProfits = holdingsData.reduce((sum, h) => sum + (h.ltcg.gain > 0 ? h.ltcg.gain : 0), 0);\n    const ltcgLosses = holdingsData.reduce((sum, h) => sum + (h.ltcg.gain < 0 ? -h.ltcg.gain : 0), 0);\n    const initial = calculateNetGains({\n      stcg: {\n        profits: stcgProfits,\n        losses: stcgLosses\n      },\n      ltcg: {\n        profits: ltcgProfits,\n        losses: ltcgLosses\n      }\n    });\n    setPreHarvest(initial);\n    setPostHarvest(initial);\n  }, []);\n  const toggleSelect = coin => {\n    const updated = selected.includes(coin) ? selected.filter(c => c !== coin) : [...selected, coin];\n    setSelected(updated);\n    const selectedHoldings = holdingsData.filter(h => updated.includes(h.coin));\n    const stcgProfits = selectedHoldings.reduce((sum, h) => sum + (h.stcg.gain > 0 ? h.stcg.gain : 0), 0);\n    const stcgLosses = selectedHoldings.reduce((sum, h) => sum + (h.stcg.gain < 0 ? -h.stcg.gain : 0), 0);\n    const ltcgProfits = selectedHoldings.reduce((sum, h) => sum + (h.ltcg.gain > 0 ? h.ltcg.gain : 0), 0);\n    const ltcgLosses = selectedHoldings.reduce((sum, h) => sum + (h.ltcg.gain < 0 ? -h.ltcg.gain : 0), 0);\n    const updatedPost = calculateNetGains({\n      stcg: {\n        profits: stcgProfits,\n        losses: stcgLosses\n      },\n      ltcg: {\n        profits: ltcgProfits,\n        losses: ltcgLosses\n      }\n    });\n    setPostHarvest(updatedPost);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 4,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      mb: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            backgroundColor: '#1e293b',\n            color: 'white'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Pre-Harvesting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Short-term: \\u20B9\", preHarvest.stcgNet]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Long-term: \\u20B9\", preHarvest.ltcgNet]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              fontWeight: \"bold\",\n              children: [\"Realised Capital Gains: \\u20B9\", preHarvest.realised]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            backgroundColor: '#1d4ed8',\n            color: 'white'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"After-Harvesting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Short-term: \\u20B9\", postHarvest.stcgNet]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Long-term: \\u20B9\", postHarvest.ltcgNet]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              fontWeight: \"bold\",\n              children: [\"Realised Capital Gains: \\u20B9\", postHarvest.realised]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), preHarvest.realised > postHarvest.realised && /*#__PURE__*/_jsxDEV(Alert, {\n              sx: {\n                mt: 2\n              },\n              severity: \"success\",\n              children: [\"You're going to save \\u20B9\", preHarvest.realised - postHarvest.realised]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          sx: {\n            backgroundColor: '#f1f5f9'\n          },\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Asset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Holdings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Avg Buy Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Current Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"ST Gain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"LT Gain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: holdingsData.map(h => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: selected.includes(h.coin),\n                onChange: () => toggleSelect(h.coin)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: 1,\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  alt: h.coinName,\n                  src: h.logo,\n                  sx: {\n                    width: 24,\n                    height: 24\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, this), h.coinName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: h.totalHoldings\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [\"\\u20B9\", h.averageBuyPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [\"\\u20B9\", h.currentPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [\"\\u20B9\", h.stcg.gain]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [\"\\u20B9\", h.ltcg.gain]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)]\n          }, h.coin, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Cue2LJyUSc9t2lQBQUoM4TrkYvg=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Grid","Card","CardContent","Typography","Checkbox","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Avatar","Paper","Alert","jsxDEV","_jsxDEV","holdingsData","coin","coinName","logo","totalHoldings","averageBuyPrice","currentPrice","stcg","gain","balance","ltcg","calculateNetGains","gains","stcgNet","profits","losses","ltcgNet","realised","Dashboard","_s","selected","setSelected","preHarvest","setPreHarvest","postHarvest","setPostHarvest","stcgProfits","reduce","sum","h","stcgLosses","ltcgProfits","ltcgLosses","initial","toggleSelect","updated","includes","filter","c","selectedHoldings","updatedPost","p","children","container","spacing","mb","item","xs","md","sx","backgroundColor","color","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","mt","severity","component","map","checked","onChange","display","alignItems","gap","alt","src","width","height","_c","$RefreshReg$"],"sources":["C:/Users/Kusum/OneDrive/Documents/Documents/koinx/my-app/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Avatar,\r\n  Paper,\r\n  Alert,\r\n} from '@mui/material';\r\n\r\nconst holdingsData = [\r\n  {\r\n    coin: 'btc',\r\n    coinName: 'Bitcoin',\r\n    logo: 'https://cryptologos.cc/logos/bitcoin-btc-logo.png',\r\n    totalHoldings: 2.5,\r\n    averageBuyPrice: 30000,\r\n    currentPrice: 35000,\r\n    stcg: { gain: 10000, balance: 1.5 },\r\n    ltcg: { gain: -5000, balance: 1 },\r\n  },\r\n  {\r\n    coin: 'eth',\r\n    coinName: 'Ethereum',\r\n    logo: 'https://cryptologos.cc/logos/ethereum-eth-logo.png',\r\n    totalHoldings: 5,\r\n    averageBuyPrice: 1500,\r\n    currentPrice: 1200,\r\n    stcg: { gain: -3000, balance: 2 },\r\n    ltcg: { gain: 2000, balance: 3 },\r\n  },\r\n];\r\n\r\nconst calculateNetGains = (gains) => {\r\n  const stcgNet = gains.stcg.profits - gains.stcg.losses;\r\n  const ltcgNet = gains.ltcg.profits - gains.ltcg.losses;\r\n  const realised = stcgNet + ltcgNet;\r\n  return { stcgNet, ltcgNet, realised };\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const [selected, setSelected] = useState([]);\r\n  const [preHarvest, setPreHarvest] = useState({});\r\n  const [postHarvest, setPostHarvest] = useState({});\r\n\r\n  useEffect(() => {\r\n    const stcgProfits = holdingsData.reduce((sum, h) => sum + (h.stcg.gain > 0 ? h.stcg.gain : 0), 0);\r\n    const stcgLosses = holdingsData.reduce((sum, h) => sum + (h.stcg.gain < 0 ? -h.stcg.gain : 0), 0);\r\n    const ltcgProfits = holdingsData.reduce((sum, h) => sum + (h.ltcg.gain > 0 ? h.ltcg.gain : 0), 0);\r\n    const ltcgLosses = holdingsData.reduce((sum, h) => sum + (h.ltcg.gain < 0 ? -h.ltcg.gain : 0), 0);\r\n\r\n    const initial = calculateNetGains({\r\n      stcg: { profits: stcgProfits, losses: stcgLosses },\r\n      ltcg: { profits: ltcgProfits, losses: ltcgLosses },\r\n    });\r\n\r\n    setPreHarvest(initial);\r\n    setPostHarvest(initial);\r\n  }, []);\r\n\r\n  const toggleSelect = (coin) => {\r\n    const updated = selected.includes(coin)\r\n      ? selected.filter((c) => c !== coin)\r\n      : [...selected, coin];\r\n    setSelected(updated);\r\n\r\n    const selectedHoldings = holdingsData.filter((h) => updated.includes(h.coin));\r\n    const stcgProfits = selectedHoldings.reduce((sum, h) => sum + (h.stcg.gain > 0 ? h.stcg.gain : 0), 0);\r\n    const stcgLosses = selectedHoldings.reduce((sum, h) => sum + (h.stcg.gain < 0 ? -h.stcg.gain : 0), 0);\r\n    const ltcgProfits = selectedHoldings.reduce((sum, h) => sum + (h.ltcg.gain > 0 ? h.ltcg.gain : 0), 0);\r\n    const ltcgLosses = selectedHoldings.reduce((sum, h) => sum + (h.ltcg.gain < 0 ? -h.ltcg.gain : 0), 0);\r\n\r\n    const updatedPost = calculateNetGains({\r\n      stcg: { profits: stcgProfits, losses: stcgLosses },\r\n      ltcg: { profits: ltcgProfits, losses: ltcgLosses },\r\n    });\r\n\r\n    setPostHarvest(updatedPost);\r\n  };\r\n\r\n  return (\r\n    <Box p={4}>\r\n      <Grid container spacing={3} mb={4}>\r\n        <Grid item xs={12} md={6}>\r\n          <Card sx={{ backgroundColor: '#1e293b', color: 'white' }}>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>Pre-Harvesting</Typography>\r\n              <Typography>Short-term: ₹{preHarvest.stcgNet}</Typography>\r\n              <Typography>Long-term: ₹{preHarvest.ltcgNet}</Typography>\r\n              <Typography fontWeight=\"bold\">Realised Capital Gains: ₹{preHarvest.realised}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Card sx={{ backgroundColor: '#1d4ed8', color: 'white' }}>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>After-Harvesting</Typography>\r\n              <Typography>Short-term: ₹{postHarvest.stcgNet}</Typography>\r\n              <Typography>Long-term: ₹{postHarvest.ltcgNet}</Typography>\r\n              <Typography fontWeight=\"bold\">Realised Capital Gains: ₹{postHarvest.realised}</Typography>\r\n              {preHarvest.realised > postHarvest.realised && (\r\n                <Alert sx={{ mt: 2 }} severity=\"success\">\r\n                  You're going to save ₹{preHarvest.realised - postHarvest.realised}\r\n                </Alert>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead sx={{ backgroundColor: '#f1f5f9' }}>\r\n            <TableRow>\r\n              <TableCell>Select</TableCell>\r\n              <TableCell>Asset</TableCell>\r\n              <TableCell>Holdings</TableCell>\r\n              <TableCell>Avg Buy Price</TableCell>\r\n              <TableCell>Current Price</TableCell>\r\n              <TableCell>ST Gain</TableCell>\r\n              <TableCell>LT Gain</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {holdingsData.map((h) => (\r\n              <TableRow key={h.coin}>\r\n                <TableCell>\r\n                  <Checkbox\r\n                    checked={selected.includes(h.coin)}\r\n                    onChange={() => toggleSelect(h.coin)}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Box display=\"flex\" alignItems=\"center\" gap={1}>\r\n                    <Avatar alt={h.coinName} src={h.logo} sx={{ width: 24, height: 24 }} />\r\n                    {h.coinName}\r\n                  </Box>\r\n                </TableCell>\r\n                <TableCell>{h.totalHoldings}</TableCell>\r\n                <TableCell>₹{h.averageBuyPrice}</TableCell>\r\n                <TableCell>₹{h.currentPrice}</TableCell>\r\n                <TableCell>₹{h.stcg.gain}</TableCell>\r\n                <TableCell>₹{h.ltcg.gain}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}