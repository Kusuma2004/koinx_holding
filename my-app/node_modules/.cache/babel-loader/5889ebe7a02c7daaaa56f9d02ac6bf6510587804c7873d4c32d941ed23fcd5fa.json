{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kusum\\\\OneDrive\\\\Documents\\\\Documents\\\\koinx\\\\my-app\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Paper, Typography, Checkbox, TableContainer, Table, TableHead, TableRow, TableCell, TableBody } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst holdingsData = [/* your holdings JSON here... */];\nconst calculateNetGains = gains => {\n  const stcgNet = gains.stcg.profits - gains.stcg.losses;\n  const ltcgNet = gains.ltcg.profits - gains.ltcg.losses;\n  const realised = stcgNet + ltcgNet;\n  return {\n    stcgNet,\n    ltcgNet,\n    realised\n  };\n};\nconst calculateOpportunityScore = h => {\n  const st = h.stcg.gain < 0 ? Math.abs(h.stcg.gain) : 0;\n  const lt = h.ltcg.gain < 0 ? Math.abs(h.ltcg.gain) : 0;\n  return st + lt;\n};\nconst Dashboard = () => {\n  _s();\n  var _sortedHoldings$, _preHarvest$stcgNet, _preHarvest$ltcgNet, _preHarvest$realised, _postHarvest$stcgNet, _postHarvest$ltcgNet, _postHarvest$realised;\n  const [selected, setSelected] = useState([]);\n  const [preHarvest, setPreHarvest] = useState({});\n  const [postHarvest, setPostHarvest] = useState({});\n  const holdingsWithScore = holdingsData.map(h => ({\n    ...h,\n    opportunityScore: calculateOpportunityScore(h)\n  }));\n  const sortedHoldings = [...holdingsWithScore].sort((a, b) => b.opportunityScore - a.opportunityScore);\n  const topOpportunity = (_sortedHoldings$ = sortedHoldings[0]) === null || _sortedHoldings$ === void 0 ? void 0 : _sortedHoldings$.coin;\n  useEffect(() => {\n    const stcgProfits = holdingsData.reduce((sum, h) => sum + (h.stcg.gain > 0 ? h.stcg.gain : 0), 0);\n    const stcgLosses = holdingsData.reduce((sum, h) => sum + (h.stcg.gain < 0 ? -h.stcg.gain : 0), 0);\n    const ltcgProfits = holdingsData.reduce((sum, h) => sum + (h.ltcg.gain > 0 ? h.ltcg.gain : 0), 0);\n    const ltcgLosses = holdingsData.reduce((sum, h) => sum + (h.ltcg.gain < 0 ? -h.ltcg.gain : 0), 0);\n    const initial = calculateNetGains({\n      stcg: {\n        profits: stcgProfits,\n        losses: stcgLosses\n      },\n      ltcg: {\n        profits: ltcgProfits,\n        losses: ltcgLosses\n      }\n    });\n    setPreHarvest(initial);\n    setPostHarvest(initial);\n  }, []);\n  const toggleSelect = coin => {\n    const updated = selected.includes(coin) ? selected.filter(c => c !== coin) : [...selected, coin];\n    setSelected(updated);\n    const selectedHoldings = holdingsData.filter(h => updated.includes(h.coin));\n    const stcgProfits = selectedHoldings.reduce((sum, h) => sum + (h.stcg.gain > 0 ? h.stcg.gain : 0), 0);\n    const stcgLosses = selectedHoldings.reduce((sum, h) => sum + (h.stcg.gain < 0 ? -h.stcg.gain : 0), 0);\n    const ltcgProfits = selectedHoldings.reduce((sum, h) => sum + (h.ltcg.gain > 0 ? h.ltcg.gain : 0), 0);\n    const ltcgLosses = selectedHoldings.reduce((sum, h) => sum + (h.ltcg.gain < 0 ? -h.ltcg.gain : 0), 0);\n    const updatedPost = calculateNetGains({\n      stcg: {\n        profits: stcgProfits,\n        losses: stcgLosses\n      },\n      ltcg: {\n        profits: ltcgProfits,\n        losses: ltcgLosses\n      }\n    });\n    setPostHarvest(updatedPost);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Crypto Holdings Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      children: [\"Top Harvest Opportunity: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: topOpportunity || \"None\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        mb: 3,\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Gains Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Pre-Harvest Short-Term Gain: \", (_preHarvest$stcgNet = preHarvest.stcgNet) === null || _preHarvest$stcgNet === void 0 ? void 0 : _preHarvest$stcgNet.toFixed(4)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Pre-Harvest Long-Term Gain: \", (_preHarvest$ltcgNet = preHarvest.ltcgNet) === null || _preHarvest$ltcgNet === void 0 ? void 0 : _preHarvest$ltcgNet.toFixed(4)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Pre-Harvest Realised Gain: \", (_preHarvest$realised = preHarvest.realised) === null || _preHarvest$realised === void 0 ? void 0 : _preHarvest$realised.toFixed(4)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mt: 2\n        },\n        children: [\"Post-Harvest Short-Term Gain: \", (_postHarvest$stcgNet = postHarvest.stcgNet) === null || _postHarvest$stcgNet === void 0 ? void 0 : _postHarvest$stcgNet.toFixed(4)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Post-Harvest Long-Term Gain: \", (_postHarvest$ltcgNet = postHarvest.ltcgNet) === null || _postHarvest$ltcgNet === void 0 ? void 0 : _postHarvest$ltcgNet.toFixed(4)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Post-Harvest Realised Gain: \", (_postHarvest$realised = postHarvest.realised) === null || _postHarvest$realised === void 0 ? void 0 : _postHarvest$realised.toFixed(4)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        \"aria-label\": \"holdings table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Coin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Current Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Total Holding\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Avg Buy Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"STCG Gain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"LTCG Gain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Opportunity Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: sortedHoldings.map(h => /*#__PURE__*/_jsxDEV(TableRow, {\n            hover: true,\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              padding: \"checkbox\",\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: selected.includes(h.coin),\n                onChange: () => toggleSelect(h.coin)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: h.logo,\n                alt: h.coin,\n                width: 24,\n                height: 24,\n                style: {\n                  verticalAlign: \"middle\",\n                  marginRight: 8\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this), h.coin]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: h.coinName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: h.currentPrice.toFixed(4)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: h.totalHolding.toFixed(6)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: h.averageBuyPrice.toFixed(4)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: h.stcg.gain >= 0 ? 'green' : 'red'\n              },\n              children: h.stcg.gain.toFixed(4)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: h.ltcg.gain >= 0 ? 'green' : 'red'\n              },\n              children: h.ltcg.gain.toFixed(4)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: h.opportunityScore.toFixed(4)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)]\n          }, h.coin, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Cue2LJyUSc9t2lQBQUoM4TrkYvg=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Paper","Typography","Checkbox","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","jsxDEV","_jsxDEV","holdingsData","calculateNetGains","gains","stcgNet","stcg","profits","losses","ltcgNet","ltcg","realised","calculateOpportunityScore","h","st","gain","Math","abs","lt","Dashboard","_s","_sortedHoldings$","_preHarvest$stcgNet","_preHarvest$ltcgNet","_preHarvest$realised","_postHarvest$stcgNet","_postHarvest$ltcgNet","_postHarvest$realised","selected","setSelected","preHarvest","setPreHarvest","postHarvest","setPostHarvest","holdingsWithScore","map","opportunityScore","sortedHoldings","sort","a","b","topOpportunity","coin","stcgProfits","reduce","sum","stcgLosses","ltcgProfits","ltcgLosses","initial","toggleSelect","updated","includes","filter","c","selectedHoldings","updatedPost","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","toFixed","mt","component","size","hover","padding","checked","onChange","src","logo","alt","width","height","style","verticalAlign","marginRight","coinName","currentPrice","totalHolding","averageBuyPrice","color","_c","$RefreshReg$"],"sources":["C:/Users/Kusum/OneDrive/Documents/Documents/koinx/my-app/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  Checkbox,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n} from '@mui/material';\r\n\r\nconst holdingsData = [ /* your holdings JSON here... */ ];\r\n\r\nconst calculateNetGains = (gains) => {\r\n  const stcgNet = gains.stcg.profits - gains.stcg.losses;\r\n  const ltcgNet = gains.ltcg.profits - gains.ltcg.losses;\r\n  const realised = stcgNet + ltcgNet;\r\n  return { stcgNet, ltcgNet, realised };\r\n};\r\n\r\nconst calculateOpportunityScore = (h) => {\r\n  const st = h.stcg.gain < 0 ? Math.abs(h.stcg.gain) : 0;\r\n  const lt = h.ltcg.gain < 0 ? Math.abs(h.ltcg.gain) : 0;\r\n  return st + lt;\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const [selected, setSelected] = useState([]);\r\n  const [preHarvest, setPreHarvest] = useState({});\r\n  const [postHarvest, setPostHarvest] = useState({});\r\n\r\n  const holdingsWithScore = holdingsData.map(h => ({ ...h, opportunityScore: calculateOpportunityScore(h) }));\r\n  const sortedHoldings = [...holdingsWithScore].sort((a, b) => b.opportunityScore - a.opportunityScore);\r\n  const topOpportunity = sortedHoldings[0]?.coin;\r\n\r\n  useEffect(() => {\r\n    const stcgProfits = holdingsData.reduce((sum, h) => sum + (h.stcg.gain > 0 ? h.stcg.gain : 0), 0);\r\n    const stcgLosses = holdingsData.reduce((sum, h) => sum + (h.stcg.gain < 0 ? -h.stcg.gain : 0), 0);\r\n    const ltcgProfits = holdingsData.reduce((sum, h) => sum + (h.ltcg.gain > 0 ? h.ltcg.gain : 0), 0);\r\n    const ltcgLosses = holdingsData.reduce((sum, h) => sum + (h.ltcg.gain < 0 ? -h.ltcg.gain : 0), 0);\r\n\r\n    const initial = calculateNetGains({\r\n      stcg: { profits: stcgProfits, losses: stcgLosses },\r\n      ltcg: { profits: ltcgProfits, losses: ltcgLosses },\r\n    });\r\n\r\n    setPreHarvest(initial);\r\n    setPostHarvest(initial);\r\n  }, []);\r\n\r\n  const toggleSelect = (coin) => {\r\n    const updated = selected.includes(coin)\r\n      ? selected.filter((c) => c !== coin)\r\n      : [...selected, coin];\r\n    setSelected(updated);\r\n\r\n    const selectedHoldings = holdingsData.filter((h) => updated.includes(h.coin));\r\n    const stcgProfits = selectedHoldings.reduce((sum, h) => sum + (h.stcg.gain > 0 ? h.stcg.gain : 0), 0);\r\n    const stcgLosses = selectedHoldings.reduce((sum, h) => sum + (h.stcg.gain < 0 ? -h.stcg.gain : 0), 0);\r\n    const ltcgProfits = selectedHoldings.reduce((sum, h) => sum + (h.ltcg.gain > 0 ? h.ltcg.gain : 0), 0);\r\n    const ltcgLosses = selectedHoldings.reduce((sum, h) => sum + (h.ltcg.gain < 0 ? -h.ltcg.gain : 0), 0);\r\n\r\n    const updatedPost = calculateNetGains({\r\n      stcg: { profits: stcgProfits, losses: stcgLosses },\r\n      ltcg: { profits: ltcgProfits, losses: ltcgLosses },\r\n    });\r\n\r\n    setPostHarvest(updatedPost);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Crypto Holdings Dashboard\r\n      </Typography>\r\n\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        Top Harvest Opportunity: <strong>{topOpportunity || \"None\"}</strong>\r\n      </Typography>\r\n\r\n      <Paper sx={{ mb: 3, p: 2 }}>\r\n        <Typography variant=\"h6\">Gains Summary</Typography>\r\n        <Typography>Pre-Harvest Short-Term Gain: {preHarvest.stcgNet?.toFixed(4)}</Typography>\r\n        <Typography>Pre-Harvest Long-Term Gain: {preHarvest.ltcgNet?.toFixed(4)}</Typography>\r\n        <Typography>Pre-Harvest Realised Gain: {preHarvest.realised?.toFixed(4)}</Typography>\r\n\r\n        <Typography sx={{ mt: 2 }}>Post-Harvest Short-Term Gain: {postHarvest.stcgNet?.toFixed(4)}</Typography>\r\n        <Typography>Post-Harvest Long-Term Gain: {postHarvest.ltcgNet?.toFixed(4)}</Typography>\r\n        <Typography>Post-Harvest Realised Gain: {postHarvest.realised?.toFixed(4)}</Typography>\r\n      </Paper>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table size=\"small\" aria-label=\"holdings table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell></TableCell>\r\n              <TableCell>Coin</TableCell>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Current Price</TableCell>\r\n              <TableCell>Total Holding</TableCell>\r\n              <TableCell>Avg Buy Price</TableCell>\r\n              <TableCell>STCG Gain</TableCell>\r\n              <TableCell>LTCG Gain</TableCell>\r\n              <TableCell>Opportunity Score</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {sortedHoldings.map((h) => (\r\n              <TableRow key={h.coin} hover>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selected.includes(h.coin)}\r\n                    onChange={() => toggleSelect(h.coin)}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <img\r\n                    src={h.logo}\r\n                    alt={h.coin}\r\n                    width={24}\r\n                    height={24}\r\n                    style={{ verticalAlign: \"middle\", marginRight: 8 }}\r\n                  />\r\n                  {h.coin}\r\n                </TableCell>\r\n                <TableCell>{h.coinName}</TableCell>\r\n                <TableCell>{h.currentPrice.toFixed(4)}</TableCell>\r\n                <TableCell>{h.totalHolding.toFixed(6)}</TableCell>\r\n                <TableCell>{h.averageBuyPrice.toFixed(4)}</TableCell>\r\n                <TableCell\r\n                  sx={{ color: h.stcg.gain >= 0 ? 'green' : 'red' }}\r\n                >\r\n                  {h.stcg.gain.toFixed(4)}\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{ color: h.ltcg.gain >= 0 ? 'green' : 'red' }}\r\n                >\r\n                  {h.ltcg.gain.toFixed(4)}\r\n                </TableCell>\r\n                <TableCell>{h.opportunityScore.toFixed(4)}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}